{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chiem\\\\2022\\\\spring\\\\webdev\\\\web-dev\\\\src\\\\components\\\\Labs\\\\ReduxExamples\\\\TodosComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todos = () => {\n  _s();\n\n  const todos = useSelector(state => state.todos);\n  const [todo, setTodo] = useState({\n    do: '',\n    done: false\n  });\n  const dispatch = useDispatch();\n\n  const createTodoClickHandler = () => {\n    const action = {\n      type: 'createtodo',\n      todo\n    };\n    dispatch(action);\n  };\n\n  const deleteTodoClickHandler = todo => {\n    const action = {\n      type: 'deletetodo',\n      todo\n    };\n    dispatch(action);\n  };\n\n  const updateTodoClickHandler = () => {\n    const action = {\n      type: 'updatetodo',\n      todo\n    };\n    dispatch(action);\n  };\n\n  const todoChangeHandler = event => {\n    const doValue = event.target.value;\n    const newTodo = {\n      do: doValue\n    };\n    setTodo(newTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          checked: todo.done,\n          onChange: event => updateTodoClickHandler({ ...todo,\n            done: event.target.checked\n          }),\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodoClickHandler(todo),\n          className: \"btn btn-danger float-end\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 31\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: todoChangeHandler,\n          value: todo.do,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createTodoClickHandler,\n          className: \"btn btn-primary\",\n          children: \"Create New Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Todos, \"lQPkXYq0HDkHAykpMxmm9w9YMNM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["C:/Users/chiem/2022/spring/webdev/web-dev/src/components/Labs/ReduxExamples/TodosComponent.js"],"names":["React","useState","useDispatch","useSelector","Todos","todos","state","todo","setTodo","do","done","dispatch","createTodoClickHandler","action","type","deleteTodoClickHandler","updateTodoClickHandler","todoChangeHandler","event","doValue","target","value","newTodo","map","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;;;;AAEA,MAAMC,KAAK,GAAG,MAAK;AAAA;;AACjB,QAAMC,KAAK,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAACQ,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,IAAI,EAAE;AAAf,GAAD,CAAhC;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,sBAAsB,GAAG,MAAK;AAClC,UAAMC,MAAM,GAAG;AACbC,MAAAA,IAAI,EAAE,YADO;AACMP,MAAAA;AADN,KAAf;AAGAI,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACD,GALD;;AAMA,QAAME,sBAAsB,GAAIR,IAAD,IAAS;AACtC,UAAMM,MAAM,GAAG;AACbC,MAAAA,IAAI,EAAE,YADO;AACMP,MAAAA;AADN,KAAf;AAGAI,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACD,GALD;;AAMA,QAAMG,sBAAsB,GAAG,MAAM;AACnC,UAAMH,MAAM,GAAE;AACZC,MAAAA,IAAI,EAAE,YADM;AACQP,MAAAA;AADR,KAAd;AAGAI,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACD,GALD;;AAMA,QAAMI,iBAAiB,GAAIC,KAAD,IAAU;AAClC,UAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACA,UAAMC,OAAO,GAAG;AACdb,MAAAA,EAAE,EAAEU;AADU,KAAhB;AAGAX,IAAAA,OAAO,CAACc,OAAD,CAAP;AACD,GAND;;AAOA,sBACI;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,iBAEIjB,KAAK,CAACkB,GAAN,CAAUhB,IAAI,iBAAI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,gCAChB;AAAO,UAAA,OAAO,EAAEA,IAAI,CAACG,IAArB;AACO,UAAA,QAAQ,EAAGQ,KAAD,IACNF,sBAAsB,CAClB,EAAC,GAAGT,IAAJ;AACEG,YAAAA,IAAI,EAAEQ,KAAK,CAACE,MAAN,CAAaI;AADrB,WADkB,CAFjC;AAKO,UAAA,IAAI,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,gBADgB,eAOhB;AAAQ,UAAA,OAAO,EAAE,MACbT,sBAAsB,CAACR,IAAD,CAD1B;AAEQ,UAAA,SAAS,EAAC,0BAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPgB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB,CAFJ,eAgBE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,gCACA;AAAO,UAAA,QAAQ,EAAGU,iBAAlB;AACO,UAAA,KAAK,EAAIV,IAAI,CAACE,EADrB;AAEO,UAAA,SAAS,EAAC;AAFjB;AAAA;AAAA;AAAA;AAAA,gBADA,eAIE;AAAQ,UAAA,OAAO,EAAEG,sBAAjB;AAAyC,UAAA,SAAS,EAAC,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADJ;AA+BD,CA5DD;;GAAMR,K;UACUD,W,EAEGD,W;;;KAHbE,K;AA8DN,eAAeA,KAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\n\r\nconst Todos = () =>{\r\n  const todos = useSelector(state => state.todos);\r\n  const [todo, setTodo] = useState({do: '', done: false});\r\n  const dispatch = useDispatch();\r\n  const createTodoClickHandler = () =>{\r\n    const action = {\r\n      type: 'createtodo',todo\r\n    };\r\n    dispatch(action);\r\n  }\r\n  const deleteTodoClickHandler = (todo) =>{\r\n    const action = {\r\n      type: 'deletetodo',todo\r\n    };\r\n    dispatch(action);\r\n  }\r\n  const updateTodoClickHandler = () => {\r\n    const action ={\r\n      type: 'updatetodo', todo\r\n    };\r\n    dispatch(action);\r\n  }\r\n  const todoChangeHandler = (event) =>{\r\n    const doValue = event.target.value;\r\n    const newTodo = {\r\n      do: doValue\r\n    };\r\n    setTodo(newTodo);\r\n  }\r\n  return(\r\n      <>\r\n        <h3>Todos</h3>\r\n        <ul className=\"list-group\">\r\n          {\r\n            todos.map(todo => <li className=\"list-group-item\">\r\n              <input checked={todo.done}\r\n                     onChange={(event) =>\r\n                         updateTodoClickHandler(\r\n                             {...todo,\r\n                               done: event.target.checked})}\r\n                     type=\"checkbox\"/>\r\n              <button onClick={() =>\r\n                  deleteTodoClickHandler(todo)}\r\n                      className=\"btn btn-danger float-end\">\r\n                Delete\r\n              </button>\r\n            </li>)\r\n          }\r\n          <li className=\"list-group-item\">\r\n          <input onChange ={todoChangeHandler}\r\n                 value = {todo.do}\r\n                 className=\"form-control\"/>\r\n            <button onClick={createTodoClickHandler} className=\"btn btn-primary\">\r\n              Create New Todo\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </>\r\n\r\n  );\r\n};\r\n\r\nexport default Todos;"]},"metadata":{},"sourceType":"module"}