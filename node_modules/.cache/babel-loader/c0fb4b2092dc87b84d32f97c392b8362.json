{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chiem\\\\2022\\\\spring\\\\webdev\\\\web-dev\\\\src\\\\components\\\\Tuiter\\\\ProfileScreen\\\\ProfileList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ProfileListItem from \"./ProfileListItem\";\nimport ProfileReducer from \"../Reducers/ProfileReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileList = () => {\n  _s();\n\n  const profiles = useSelector(state => state.profiles);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: profiles && profiles.map && profiles.map(profile => /*#__PURE__*/_jsxDEV(ProfileListItem, {\n      profile: profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ProfileList, \"PaZU3PGJ+dxhR7ngrqbjPismNLI=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProfileList;\nexport default ProfileList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileList\");","map":{"version":3,"sources":["C:/Users/chiem/2022/spring/webdev/web-dev/src/components/Tuiter/ProfileScreen/ProfileList.js"],"names":["React","useSelector","ProfileListItem","ProfileReducer","ProfileList","profiles","state","map","profile"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,sBACI;AAAA,cACGA,QAAQ,IAAIA,QAAQ,CAACE,GAArB,IAA4BF,QAAQ,CAACE,GAAT,CAAcC,OAAD,iBACtC,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA,YADyB;AAD/B;AAAA;AAAA;AAAA;AAAA,UADJ;AAOD,CATD;;GAAMJ,W;UACaH,W;;;KADbG,W;AAWN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ProfileListItem from \"./ProfileListItem\"\r\nimport ProfileReducer from \"../Reducers/ProfileReducer\";\r\n\r\nconst ProfileList = () => {\r\n  const profiles = useSelector(state => state.profiles);\r\n  return(\r\n      <div>\r\n        {profiles && profiles.map && profiles.map((profile) =>\r\n            <ProfileListItem profile={profile}/>)\r\n        }\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ProfileList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}